import crossClose from '../../assets/cross-close-icon.svg';
import triangleDown from '../../assets/triangle-down-icon.svg';
import closeIconCircled from '../../assets/close-icon-circled.svg';
import successIcon from '../../assets/success-icon-circled.svg';
import { useState } from 'react';
import { SVGminusCircled, SVGplusCircled } from '../../SVG/SVGIcons/SVGIcons';

const ages = [
  '–í–∑—Ä–æ—Å–ª—ã–π',
  '–î–µ—Ç—Å–∫–∏–π',
];

const types = [
  '–ü–∞—Å–ø–æ—Ä—Ç –†–§',
  '–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏',
]

export const PassengerInfo = () => {
  const [optionAgeOpen, setOptionAgeOpen] = useState(false);
  const [ageValue, setAgeValue] = useState('–í–∑—Ä–æ—Å–ª—ã–π');
  const [optionTypeOpen, setOptionTypeOpen] = useState(false);
  const [typeValue, setTypeValue] = useState('–ü–∞—Å–ø–æ—Ä—Ç –†–§');
  const [sex, setSex] = useState('M');
  const [formOpen, setFormOpen] = useState(false);
  const [error, setError] = useState(false);
  const [success, setSuccess] = useState(false);

  const handleAgeClick = (a: string) => {
    setAgeValue(a);
    setOptionAgeOpen(false);
  }

  const handleTypeClick = (a: string) => {
    setTypeValue(a);
    setOptionTypeOpen(false);
  }

  return (
    <div className="passenger-info">
      <div className="passenger-info__head">
        <div className="passenger-info__head_wrapper">
          <span onClick={() => setFormOpen((prev) => !prev)}>
            {formOpen ? <SVGminusCircled /> : <SVGplusCircled />}
          </span>
          <h3>–ü–∞—Å—Å–∞–∂–∏—Ä 1</h3>
        </div>
        <img
          onClick={() => setFormOpen(false)}
          src={crossClose}
          alt="x"
          className="passenger-info__head_close" />
      </div>

      {formOpen && 
      <>
        <div className='passenger-info__main'>
        <div className='passenger-info__main_select-age'>
          <img src={triangleDown} alt="üîª" />
          <input onClick={() => setOptionAgeOpen(true)} readOnly value={ageValue} />
          {optionAgeOpen && <div className='passenger-info__main_select-age_roll'>
            {ages.map((a) => (
              <span onClick={() => handleAgeClick(a)}>{a}</span>
            ))}
          </div>}
        </div>

        <div className='passenger-info__main_name'>
          <div className='passenger-info__main_name_wrapper'>
            <label htmlFor='surname'>–§–∞–º–∏–ª–∏—è</label>
            <input name='surname' id='surname' type='text'></input>
          </div>
          <div className='passenger-info__main_name_wrapper'>
            <label htmlFor='name'>–ò–º—è</label>
            <input name='name' id='name' type='text'></input>
          </div>
          <div className='passenger-info__main_name_wrapper'>
            <label htmlFor='second-name'>–û—Ç—á–µ—Å—Ç–≤–æ</label>
            <input name='second-name' id='second-name' type='text'></input>
          </div>
        </div>

        <div className='passenger-info__main_sex-date'>
          <div className='passenger-info__main_sex-date_wrapper-sex'>
              <label>–ü–æ–ª</label>
              <div onClick={() => setSex('–ú')} className={sex === '–ú' ? 'active' : ''}>–ú</div>
              <div onClick={() => setSex('–ñ')} className={sex === '–ñ' ? 'active' : ''}>–ñ</div>
          </div> 
          <div className='passenger-info__main_sex-date_wrapper-date'>
            <label htmlFor='date-birth'>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
            <input id='date-birth' readOnly placeholder='–î–î/–ú–ú/–ì–ì'></input>
          </div> 
        </div>

        <div className='passenger-info__main_checkbox'>
          <input id='checkbox' type='checkbox' />
          <label htmlFor='checkbox'>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –ø–æ–¥–≤–∏–∂–Ω–æ—Å—Ç—å</label>
        </div>

        {typeValue === '–ü–∞—Å–ø–æ—Ä—Ç –†–§' && <div className='passenger-info__main_select-type'>
          <div className='passenger-info__main_select-type_wrapper'>
            <label htmlFor='document-type'>–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞</label>
            <img src={triangleDown} alt="üîª" />
            <input
              className='passenger-info__main_select-type_passport'
              id='document-type'
              onClick={() => setOptionTypeOpen(true)}
              readOnly
              value={typeValue} />
            {optionTypeOpen && <div className='passenger-info__main_select-type_roll'>
            {types.map((a) => (
              <span onClick={() => handleTypeClick(a)}>{a}</span>
            ))}
            </div>}
          </div>

          <div className='passenger-info__main_select-type_wrapper'>
            <label htmlFor='passport-series'>–°–µ—Ä–∏—è</label>
            <input
              className='passenger-info__main_select-type_passport'
              id='passport-series'
              placeholder='_ _ _ _' />
          </div>

          <div className='passenger-info__main_select-type_wrapper'>
            <label htmlFor='passport-number'>–ù–æ–º–µ—Ä</label>
            <input
              className='passenger-info__main_select-type_passport'
              id='passport-number'
              placeholder='_ _ _ _ _ _' />
          </div>
        </div>}

        {typeValue === '–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏' && <div className='passenger-info__main_select-type'>
          <div className='passenger-info__main_select-type_wrapper wrapper-kid'>
            <label htmlFor='document-type'>–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞</label>
            <img src={triangleDown} alt="üîª" />
            <input
               className='passenger-info__main_select-type_kid'
               id='document-type'
               onClick={() => setOptionTypeOpen(true)}
               readOnly
               value={typeValue} />
            {optionTypeOpen && <div className='passenger-info__main_select-type_roll'>
            {types.map((a) => (
              <span onClick={() => handleTypeClick(a)}>{a}</span>
            ))}
          </div>}
          </div>

          <div className='passenger-info__main_select-type_wrapper'>
            <label htmlFor='passport-series'>–ù–æ–º–µ—Ä</label>
            <input
              className='passenger-info__main_select-type_passport'
              id='passport-series'
              placeholder='12 —Å–∏–º–≤–æ–ª–æ–≤' />
          </div>
        </div>}
      </div>

      <div className={`passenger-info__alert ${error ? 'pink-background' : success ? 'green-background' : ''}`}>
        <img src={error ? closeIconCircled : successIcon} alt={error ? 'x' : 'v'} />
        <div className='passenger-info__alert_message'>
          {
            error && typeValue === '–ü–∞—Å–ø–æ—Ä—Ç –†–§'
            ? <p>–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞. –ü—Ä–∏–º–µ—Ä: <span>1234 567890</span></p>
            : error && typeValue === '–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏'
            ? <p>–î–∞–Ω–Ω—ã–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏ —É–∫–∞–∑–∞–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü—Ä–∏–º–µ—Ä: <span>VIII-–´–ü-123456</span></p>
            : success ? <p className='success-text'>–ì–æ—Ç–æ–≤–æ</p>
            : ''
          }
        </div>
        {!error && <button>–°–ª–µ–¥—É—é—â–∏–π –ø–∞—Å—Å–∞–∂–∏—Ä</button>}
      </div>

      {/* {!error && !success && <div className='passenger-info__main_next-button'>
        <button>–°–ª–µ–¥—É—é—â–∏–π –ø–∞—Å—Å–∞–∂–∏—Ä</button>
      </div>} */}
      </>}
    </div>
  )
}
